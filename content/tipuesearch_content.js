var tipuesearch = {"pages": [{'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': '直播紀錄', 'text': '', 'tags': '', 'url': '直播紀錄.html'}, {'title': '第二週', 'text': '進行任務分派,並以小組方式完成assiganment 1 \n \n 課程討論直播紀錄 \n \n', 'tags': '', 'url': '第二週.html'}, {'title': '第三週', 'text': '\n', 'tags': '', 'url': '第三週.html'}, {'title': '第五週', 'text': '分配翻譯段落並將完成檔案上傳至個人網頁 \n \n 討論課程直播紀錄 \n \n', 'tags': '', 'url': '第五週.html'}, {'title': '第六週', 'text': '\n', 'tags': '', 'url': '第六週.html'}, {'title': '第七週', 'text': '\n', 'tags': '', 'url': '第七週.html'}, {'title': '第八週', 'text': '1.利用onshape繪製車子(不可過於簡易,要有懸吊系統跟一些複雜度) (1)了解零件檔案格式及如何轉檔導入coppeliasim (2)轉檔格式有幾個版本需要了解 \n 協同人員:40723104,40723107,40723122,40723140,40723149,40723151,40723153,40723154 \n 2.利用 CoppeliaSim Python Remote API 控制四輪車 (1)了解 Python Remote API程式,並且能夠實際應用,對車子進行遠端遙控 \n 協同人員:40723114,40723115,40723118,40723123,40723155 \n 3.全體人員須了解 Ubuntu 20.04 虛擬主機 (1) 了解 NAT ,讓虛擬主機可以上網,做內外IP的轉換 \n (2)了解 Brid ged Adapter ,可建立獨立service,希望藉由兩片網卡,可以對外連線 \n (3)了解 Host - only Adapte \n 繪圖內容分配 \n \n', 'tags': '', 'url': '第八週.html'}, {'title': '第九週', 'text': '\n', 'tags': '', 'url': '第九週.html'}, {'title': '第十週', 'text': '\n', 'tags': '', 'url': '第十週.html'}, {'title': '第十一週', 'text': '\n', 'tags': '', 'url': '第十一週.html'}, {'title': '第十二週', 'text': '\n', 'tags': '', 'url': '第十二週.html'}, {'title': '第十三週', 'text': '', 'tags': '', 'url': '第十三週.html'}, {'title': '第十四週', 'text': '\n', 'tags': '', 'url': '第十四週.html'}, {'title': '第十五週', 'text': '\n', 'tags': '', 'url': '第十五週.html'}, {'title': '每周進度', 'text': '', 'tags': '', 'url': '每周進度.html'}, {'title': 'w1', 'text': '本週進度 \n 介紹學期目標和進度和建立倉儲cd2020和網頁 \n \n', 'tags': '', 'url': 'w1.html'}, {'title': 'w2', 'text': '本週進度 \n 更新python至3.8.2 \n \n 透過這個網站下載\xa0 Windows x86-64 executable installe r 的版本 \n 完成下載後開啟並選擇下方的 Customize installation \n \n 並選擇安裝位置後將python安裝到隨身碟中的Y槽裡 \n 並使用start_mdecourse.bat 批次檔 \n 將 批次檔中的py373改為安裝python 3.8.2版本的資料夾 \n 並將新版本的資料夾命名為py382即可完成這次更新 \n', 'tags': '', 'url': 'w2.html'}, {'title': 'w3', 'text': '本週進度 \n 以小組方式進行亂數分組研究 以下是程式碼代表的內容如下 \n 1. random.random() \n \u3000\u3000random.random()方法返回一個隨機數，其在0至1的範圍之內，以下是其具體用法： \n \u3000\u3000import random \n \u3000\u3000print (“隨機數: “, random.random()) \n \u3000\u3000輸出結果：0.22867521257116 \n 2. random.uniform() \n \u3000\u3000random.uniform()是在指定範圍內生成隨機數，其有兩個引數，一個是範圍上限，一個是範圍下線，具體用法如下： \n \u3000\u3000import random \n \u3000\u3000print (random.uniform(2, 6)) \n \u3000\u3000輸出結果：3.62567571297255 \n 3. random.randint() \n \u3000\u3000random.randint()是隨機生成指定範圍內的整數，其有兩個引數，一個是範圍上限，一個是範圍下線，具體用法如下： \n \u3000\u3000import random \n \u3000\u3000print (random.randint(6,8)) \n \u3000\u3000輸出結果：8 \n 4. random.randrange() \n \u3000\u3000random.randrange()是在指定範圍內，按指定基數遞增的集合中獲得一個隨機數，有三個引數，前兩個引數代表範圍上限和下限，第三個引數是遞增增量，具體用法如下： \n \u3000\u3000import random \n \u3000\u3000print (random.randrange(6, 28, 3)) \n \u3000\u3000輸出結果：15 \n 5. random.choice() \n \u3000\u3000random.choice()是從序列中獲取一個隨機元素，具體用法如下： \n \u3000\u3000import random \n \u3000\u3000print (random.choice(“www.jb51.net”)) \n \u3000\u3000輸出結果：o \n 6. random.shuffle() \n \u3000\u3000random.shuffle()函式是將一個列表中的元素打亂，隨機排序，具體用法如下： \n \u3000\u3000import random \n \u3000\u3000num = [1, 2, 3, 4, 5] \n \u3000\u3000random.shuffle(num) \n \u3000\u3000print (num) \n \u3000\u3000輸出結果：[3, 5, 2, 4, 1] \n 7. random.sample() \n \u3000\u3000random.sample()函式是從指定序列中隨機獲取指定長度的片段，原有序列不會改變，有兩個引數，第一個引數代表指定序列，第二個引數是需獲取的片段長度，具體用法如下： \n \u3000\u3000import random \n \u3000\u3000num = [1, 2, 3, 4, 5] \n \u3000\u3000sli = random.sample(num, 3) \n \u3000\u3000print (sli) \n \u3000\u3000輸出結果：[2, 4, 5] \n 參考資料: https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/357241/ \n', 'tags': '', 'url': 'w3.html'}, {'title': 'w6', 'text': '本週進度 \n 進行小組直播討論,分配工作內容 : 翻譯 \n', 'tags': '', 'url': 'w6.html'}, {'title': 'w7', 'text': '本週是assiganmant2截止時間,這週課程也是採用線上教學模式,老師進行組別隨機抽點直播 \n \n 直播紀錄影片 \n \n', 'tags': '', 'url': 'w7.html'}, {'title': 'w9', 'text': '紙本筆記 \n \n', 'tags': '', 'url': 'w9.html'}, {'title': 'w10', 'text': '', 'tags': '', 'url': 'w10.html'}, {'title': 'w11', 'text': '', 'tags': '', 'url': 'w11.html'}, {'title': 'w12', 'text': '這週老師開始進行隨機分組協同編輯網頁 當被抽到時系統會寄信通知你 \n \n ▲通知協同信件 \n \n ▲小組倉儲 \n 我們要學習和不同的組員在短時間內進行協同,並且要避免將倉儲推爆 \n 主要任務是在網頁上放上自己的本週進度,但因為是第一週實驗所以只放上個人資訊就沒時間了 \n \n ▲小組網頁 \n', 'tags': '', 'url': 'w12.html'}, {'title': 'w13', 'text': '', 'tags': '', 'url': 'w13.html'}, {'title': 'w14', 'text': '', 'tags': '', 'url': 'w14.html'}, {'title': 'w15', 'text': '', 'tags': '', 'url': 'w15.html'}, {'title': 'w16', 'text': '', 'tags': '', 'url': 'w16.html'}, {'title': 'Assiganment1', 'text': '', 'tags': '', 'url': 'Assiganment1.html'}, {'title': '更新python', 'text': '', 'tags': '', 'url': '更新python.html'}, {'title': '亂數分組', 'text': '', 'tags': '', 'url': '亂數分組.html'}, {'title': 'Assiganment2', 'text': '', 'tags': '', 'url': 'Assiganment2.html'}, {'title': 'Top 0感想', 'text': '40723153 吳佳穎 \n 合作不只是行為更是一種未來的趨勢，從古至今合作的觀念一直是被推崇的，從【單絲不成線，獨木不成林】 、【萬人操弓，共射一招，招無不中】。等諺語就能知道。在工作上一個人或許可以迅速的決定所有事情，但一個人絕對比不上數個人加起來的能力，透過合作讓每個人發揮自己的特長讓效率以倍數增加。看完這個章節讓我更加理解到協同的重要性，而在協同前也需要做許多的準備，無論是個人心態的調整抑或是選用協同的工具都是非常重要的，我也學到了很多協同的優點，讓我印象深刻的是能讓客戶參與產品設計過程，透過讓客戶的參與能加速溝通的效率，更能讓消費端理解設計者的用意和進度過程，創造雙贏的局面。 \n', 'tags': '', 'url': 'Top 0感想.html'}, {'title': 'onshape繪圖', 'text': '作業其中一項是需要在onshape上繪圖,並協同共用零件進行組裝 \n 雖然沒有被分配到需要繪製零件但仍舊可以自己進行練習 \n 學習繪圖和共用的方法 \n \n ▲工作分配圖 \n \n ▲練習繪製各式零件 \n \n ▲繪圖練習影片 \n', 'tags': '', 'url': 'onshape繪圖.html'}, {'title': 'webots介紹翻譯', 'text': '', 'tags': '', 'url': 'webots介紹翻譯.html'}, {'title': 'Assiganment3', 'text': '', 'tags': '', 'url': 'Assiganment3.html'}, {'title': '虛擬主機設定', 'text': '', 'tags': '', 'url': '虛擬主機設定.html'}, {'title': '遇到問題', 'text': '', 'tags': '', 'url': '遇到問題.html'}, {'title': '網頁錯誤', 'text': '在某次推送完畢之後動態網頁就無法打開編輯 \n ▲網頁錯誤訊息 \n \n \n ▲嘗試找尋問題修正但失敗 \n 發現無法解決問題詢問老師後從server端檢查 \n \n 發現是推送和python版本錯誤,還原成前一個版本後更改設定 \n \n 重新執行就修復完成 \n', 'tags': '', 'url': '網頁錯誤.html'}, {'title': '協同網頁推送', 'text': '在12~16週老師每週都會隨機抽取同學進行分組協同編輯網頁 \n 但每次推送常會有不小心將倉儲或是網頁爆炸的情況 \n 所以在推送之前需要的步驟有以下幾點 \n \n 1. git clone 倉儲 \xa0 → 下載想要編輯的倉儲到近端 \n 2.  在進端進入該倉儲並git submodule init / git submodule update\xa0 → 將老師遠端的cmsimde下載入倉儲內的cmsimde資料夾 \n 3.  在編輯完git pull\xa0 → 確認近端沒有衝突或是無法推送的檔案 \n 4.  輸入git status\xa0 → 確認遠端和近端即將要推送的資料有無錯誤 \n 若是遠端和近端有差異會產生以下訊息 \n \n 解決方法: \n 再次使用python 進入動態網頁將錯誤修正並轉為靜態網頁後即可成功推送無衝突版本', 'tags': '', 'url': '協同網頁推送.html'}]};