<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>直播紀錄</h1>
<h2>第二週</h2>
<p>進行任務分派,並以小組方式完成assiganment 1</p>
<p><img alt="" height="378" src="/images/57278.jpg" width="379"/></p>
<p>課程討論直播紀錄</p>
<p><iframe allowfullscreen="allowfullscreen" height="375" src="//www.youtube.com/embed/JXUKf0cfJcc" width="500"></iframe></p>
<h2>第三週</h2>
<p><br/><iframe allowfullscreen="allowfullscreen" height="375" src="//www.youtube.com/embed/QTfPD5bpeKc" width="500"></iframe></p>
<h2>第五週</h2>
<p>分配翻譯段落並將完成檔案上傳至個人網頁</p>
<p><img alt="" height="274" src="/images/57277.jpg" width="500"/></p>
<p>討論課程直播紀錄</p>
<p><iframe allowfullscreen="allowfullscreen" height="375" src="//www.youtube.com/embed/ElNea4b1dX8" width="500"></iframe></p>
<h2>第六週</h2>
<p><iframe allowfullscreen="allowfullscreen" height="375" src="//www.youtube.com/embed/B6jt5OAf424" width="500"></iframe></p>
<h2>第七週</h2>
<p><iframe allowfullscreen="allowfullscreen" height="375" src="//www.youtube.com/embed/96y-KSUWDyE" width="500"></iframe></p>
<h2>第八週</h2>
<p>1.利用onshape繪製車子(不可過於簡易,要有懸吊系統跟一些複雜度)<br/>(1)了解零件檔案格式及如何轉檔導入coppeliasim<br/>(2)轉檔格式有幾個版本需要了解</p>
<p>協同人員:40723104,40723107,40723122,40723140,40723149,40723151,40723153,40723154</p>
<p>2.利用 CoppeliaSim Python Remote API 控制四輪車<br/>(1)了解 Python Remote API程式,並且能夠實際應用,對車子進行遠端遙控</p>
<p>協同人員:40723114,40723115,40723118,40723123,40723155</p>
<p>3.全體人員須了解 Ubuntu 20.04 虛擬主機<br/>(1) 了解 NAT ,讓虛擬主機可以上網,做內外IP的轉換</p>
<p>(2)了解 Brid ged Adapter ,可建立獨立service,希望藉由兩片網卡,可以對外連線</p>
<p>(3)了解 Host - only Adapte</p>
<p>繪圖內容分配</p>
<p><img alt="" height="500" src="/images/64586.jpg" width="283"/></p>
<h1>每周進度</h1>
<h2>w1</h2>
<h4>本週進度</h4>
<p>介紹學期目標和進度和建立倉儲cd2020和網頁</p>
<p><img alt="" height="432" src="/images/3444.png" width="768"/></p>
<h2>w2</h2>
<h4>本週進度</h4>
<p>更新python至3.8.2</p>
<p><img alt="" height="450" src="/images/python.png" width="800"/></p>
<p>透過這個網站下載 <a href="https://s40723114.github.io/get_page/python%20%E6%9B%B4%E6%96%B0%E8%87%B33.8.2/Windows%20x86-64%20executable%20installer">Windows x86-64 executable installe</a>r 的版本</p>
<p>完成下載後開啟並選擇下方的<span>Customize installation</span></p>
<p><img alt="" height="409" src="/images/步驟.png" width="666"/></p>
<p>並選擇安裝位置後將python安裝到隨身碟中的Y槽裡</p>
<p>並使用start_mdecourse.bat 批次檔</p>
<p>將<span>批次檔中的py373改為安裝python 3.8.2版本的資料夾</span></p>
<p><span>並將新版本的資料夾命名為py382即可完成這次更新</span></p>
<h2>w3</h2>
<h4>本週進度</h4>
<p>以小組方式進行亂數分組研究 以下是程式碼代表的內容如下</p>
<p><strong>1. random.random()</strong></p>
<p>　　random.random()方法返回一個隨機數，其在0至1的範圍之內，以下是其具體用法：</p>
<p>　　import random</p>
<p>　　print (“隨機數: “, random.random())</p>
<p>　　輸出結果：0.22867521257116</p>
<p><strong>2. random.uniform()</strong></p>
<p>　　random.uniform()是在指定範圍內生成隨機數，其有兩個引數，一個是範圍上限，一個是範圍下線，具體用法如下：</p>
<p>　　import random</p>
<p>　　print (random.uniform(2, 6))</p>
<p>　　輸出結果：3.62567571297255</p>
<p><strong>3. random.randint()</strong></p>
<p>　　random.randint()是隨機生成指定範圍內的整數，其有兩個引數，一個是範圍上限，一個是範圍下線，具體用法如下：</p>
<p>　　import random</p>
<p>　　print (random.randint(6,8))</p>
<p>　　輸出結果：8</p>
<p><strong>4. random.randrange()</strong></p>
<p>　　random.randrange()是在指定範圍內，按指定基數遞增的集合中獲得一個隨機數，有三個引數，前兩個引數代表範圍上限和下限，第三個引數是遞增增量，具體用法如下：</p>
<p>　　import random</p>
<p>　　print (random.randrange(6, 28, 3))</p>
<p>　　輸出結果：15</p>
<p><strong>5. random.choice()</strong></p>
<p>　　random.choice()是從序列中獲取一個隨機元素，具體用法如下：</p>
<p>　　import random</p>
<p>　　print (random.choice(“www.jb51.net”))</p>
<p>　　輸出結果：o</p>
<p><strong>6. random.shuffle()</strong></p>
<p>　　random.shuffle()函式是將一個列表中的元素打亂，隨機排序，具體用法如下：</p>
<p>　　import random</p>
<p>　　num = [1, 2, 3, 4, 5]</p>
<p>　　random.shuffle(num)</p>
<p>　　print (num)</p>
<p>　　輸出結果：[3, 5, 2, 4, 1]</p>
<p><strong>7. random.sample()<br/></strong></p>
<p>　　random.sample()函式是從指定序列中隨機獲取指定長度的片段，原有序列不會改變，有兩個引數，第一個引數代表指定序列，第二個引數是需獲取的片段長度，具體用法如下：</p>
<p>　　import random</p>
<p>　　num = [1, 2, 3, 4, 5]</p>
<p>　　sli = random.sample(num, 3)</p>
<p>　　print (sli)</p>
<p>　　輸出結果：[2, 4, 5]</p>
<p>參考資料: https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/357241/</p>
<h2>w6</h2>
<h4>本週進度</h4>
<p>進行小組直播討論,分配工作內容 : 翻譯</p>
<h2>w7</h2>
<p>本週是assiganmant2截止時間,這週課程也是採用線上教學模式,老師進行組別隨機抽點直播</p>
<p><img caption="false" height="279" src="/images/未命名.png" width="300"/></p>
<p>直播紀錄影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/Y04PMdEY6P4" width="420"></iframe></p>
<h2>w9</h2>
<p>紙本筆記</p>
<p><img alt="" height="254" src="/images/64584.jpg" width="500"/></p>
<h1>Assiganment2</h1>
<h2>Top 0感想</h2>
<p>40723153 吳佳穎</p>
<p>合作不只是行為更是一種未來的趨勢，從古至今合作的觀念一直是被推崇的，從【單絲不成線，獨木不成林】 、【萬人操弓，共射一招，招無不中】。等諺語就能知道。在工作上一個人或許可以迅速的決定所有事情，但一個人絕對比不上數個人加起來的能力，透過合作讓每個人發揮自己的特長讓效率以倍數增加。看完這個章節讓我更加理解到協同的重要性，而在協同前也需要做許多的準備，無論是個人心態的調整抑或是選用協同的工具都是非常重要的，我也學到了很多協同的優點，讓我印象深刻的是能讓客戶參與產品設計過程，透過讓客戶的參與能加速溝通的效率，更能讓消費端理解設計者的用意和進度過程，創造雙贏的局面。</p>
<h2>onshape繪圖</h2><h1>遇到問題</h1>
<h2>網頁錯誤</h2>
<p>在某次推送完畢之後動態網頁就無法打開編輯<img alt="" height="269" src="/images/網頁錯誤.png" width="500"/></p>
<p><img alt="" height="348" src="/images/程式碼.png" width="500"/></p>
<p><img alt="" height="350" src="/images/程式碼2.png" width="500"/></p>
<p>發現無法解決問題詢問老師後從server端檢查</p>
<p><img alt="" height="479" src="/images/檢查是否python錯誤.png" width="500"/></p>
<p>發現是推送和python版本錯誤,還原成前一個版本後更改設定</p>
<p><img alt="" height="487" src="/images/將舊版python更新.png" width="500"/></p>
<p>重新執行就修復完成</p>
<h2>協同網頁推送</h2>
<p>在12~16週老師每週都會隨機抽取同學進行分組協同編輯網頁</p>
<p>但每次推送常會有不小心將倉儲或是網頁爆炸的情況</p>
<p>所以在推送之前需要的步驟有以下幾點</p>
<p><img alt="" height="145" src="/images/推送方法.png" width="500"/></p>
<p>1.<span style="color: #808080; background-color: #ffff99;">git clone 倉儲</span> <span>→ 下載想要編輯的倉儲到近端</span></p>
<p>2. <span style="background-color: #ffff99;">在進端進入該倉儲並git submodule init / git submodule update </span><span>→ 將老師遠端的cmsimde下載入倉儲內的cmsimde資料夾</span></p>
<p>3. <span style="background-color: #ffff99;">在編輯完git pull </span><span>→ 確認近端沒有衝突或是無法推送的檔案</span></p>
<p>4. <span style="background-color: #ffff99;">輸入git status </span><span>→ 確認遠端和近端即將要推送的資料有無錯誤</span></p>
<p>若是遠端和近端有差異會產生以下訊息</p>
<p><img alt="" height="333" src="/images/偕同網頁修正.png" width="500"/></p>
<p><span style="color: #ff0000;">解決方法:</span></p>
<p>再次使用python 進入動態網頁將錯誤修正並轉為靜態網頁後即可成功推送無衝突版本</p>